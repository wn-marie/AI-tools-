# -*- coding: utf-8 -*-
"""buggy_tensorflow_code.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jaR_JZHcVvKepkw1JNWn9Y47NKVmCP7P

‚ùå Buggy Code
"""

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.datasets import mnist

# Load MNIST data
(x_train, y_train), (x_test, y_test) = mnist.load_data()

# Normalize
x_train = x_train / 255.0
x_test = x_test / 255.0

# Build model (BUG: input shape mismatch)
model = Sequential([
    Dense(128, input_shape=(28, 28), activation='relu'),  # ‚ùå Dense expects 1D input
    Dense(10, activation='softmax')
])

# Compile model (BUG: wrong loss function)
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])  # ‚ùå Labels are integers, not one-hot

# Train model
model.fit(x_train, y_train, epochs=5, validation_split=0.1)

# Evaluate
test_loss, test_acc = model.evaluate(x_test, y_test)
print("Test Accuracy:", test_acc)

"""üõ†Ô∏è What is wrong in the code?

Shape mismatch: Dense layers expect 1D input, but MNIST images are 2D (28√ó28). You need to flatten them first.

Loss function mismatch: categorical_crossentropy expects one-hot encoded labels, but MNIST labels are integers (0‚Äì9). You should use sparse_categorical_crossentropy
"""